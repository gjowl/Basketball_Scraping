@Author: Gilbert Loiseau
@Date:   2021/12/19
@Email:  gjowl04@gmail.com
@Filename: notes.txt
@Last modified by:   Gilbert Loiseau
@Last modified time: 2022/01/07

"""
This file is for taking notes on things that I have implemented from my analysis of data
from https://www.basketball-reference.com/.
"""

Once I am able to scrape data, the most important task:
Set this up so itâ€™s updating by the day

Then, this could be nice to have:
All in one statswatch website: will tell how far away someone is from a particular milestone,
refreshing daily

Similar to power rankings on nba.com, make weekly stats
 -best and worst in some stats per the week/month/etc.

2021/12/22: I started my first bit of scraping aiming to try to search for all point totals
on basketball-reference, but I couldn't find those numbers on there.

In my search for another website, I found this one:
https://basketball.realgm.com/nba/stats/2022/Totals/Qualified/points/All/desc/1/Regular_Season

It has all of the data from the seasons, and has current totals for every single player. If I
can't find another website to do with totals, I could just search through all datasets of
previous seasons and add them per player, then update per player:
I think the easiest there would be to have a list of all players all time, then just
add the data to their spot. That might be a really nice and easy way to do it, with each
player having a really nice dataframe of data?

LOL nevermind I just found that they actually have all of those stats in here!
https://basketball.realgm.com/nba/stats/Historical/Totals/Qualified/points/All/desc/1/Regular_Season

So I can try to read through this and keep it for all players, then just have to constantly update.
Alternatively, I can just read in this data from the website everyday (but I wonder how long that
would take everyday?)
This list also doesn't have years played (they have games played, but I think I'd want to look
more on a yearly basis to see year to year improvement)

Also this:https://www.nba.com/stats/players/box-outs/
nba.com actually has quite a wealth of data as well: point per possession, frequence of plays
including and ones and turnovers. They even have box out information! Now only if I could
find info on screen assists

Helpful for analysis:
Found on 5-1-2022
use apply to do operations on a dataframe: https://stackoverflow.com/questions/57362633/loop-through-columns-in-pandas-dataframe

#notes on automation for this script:
"""
for everyday:
    - scrape current list against the new list of players from bball reference and compare; if new, flag
    - scrape data for players who are playing the day before
    - scrape boxscores; if new, flag
    - scrape data for the current 450ish players who are in the league every day
        - for efficiency, maybe make a csv to update for the year? Not for all data
"""
It seems like this person has some cool code that is open access that could be useful
https://eyalshafran.github.io/scraping_basketball_reference.html
https://eyalshafran.github.io/team_logos.html

The below is what made me realize I needed to use selenium to dynamically scrape basketball reference:
https://vishaalagartha.github.io/projects/2020/01/15/bbref-scraper

After a while...
2024-12-12: 
I have been able to scrape data from NBA.com using the NBA_API, and I have been able to start putting stuff up on the site using streamlit

I got my colors set for now in .streamlit/config.toml:
[theme]
primaryColor="#f63366"
backgroundColor="#0A1222"
secondaryBackgroundColor="#262730"
textColor="#F27522"
font="monospace"

Next I want to either highlight each scatter plot with a name or face, so that it's easy to know which point is who; would also love to change colors to each
team's colors, which shouldn't be difficult, just need a set of team abbreviations and their color palettes in RGB code?

For more help with streamlit: https://docs.streamlit.io/develop/api-reference

2024-12-23
~
First off in case you never put this anywhere else: ~ is going to be the way you tribute your PhD.

I've often seen it used in approximation: ~10 minutes and your table will be ready. 

It looks like a protein/gene, it's subtle, you never see anyone else use it anywhere. So that's gonna be your thing.

And no one will be able to say anything about it because you're a fucking doctor :D.
~

Your NBA data scraper may be a bit more handy than you thought.

Initially, you were thinking that you would have to try to somehow compile the data for the "last_n_games". You didn't realize that NBA
does it for you, taking all the data from the last n games played, not just the last n games that the player played.

Kind of a dumb confusion, but a fortunate one! I had it backwards in my head for some reason :P.

2025-4-4
To run your website: streamlit run site.py
